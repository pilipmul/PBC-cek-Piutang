<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <title>GOODS REQUEST</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">

  <style>
    * {
      box-sizing: border-box;
      font-family: 'Inter', "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    }

    body {
      margin: 0;
      padding: 0;
      background: #fff;
      display: flex;
      justify-content: center;
    }

    .container {
      width: 100%;
      max-width: 480px;
      padding: 26px 20px;
    }

    h2 {
      text-align: center;
      color: #1877f2;
      margin-bottom: 22px;
    }

    label {
      font-weight: 600;
      display: block;
      margin-bottom: 6px;
      color: #333;
    }

    input, textarea {
      width: 100%;
      padding: 12px;
      border: 1px solid #ccc;
      border-radius: 8px;
      margin-bottom: 16px;
      font-size: 1rem;
      background-color: #fafafa;
    }

    input:focus, textarea:focus {
      outline: none;
      border-color: #1877f2;
      background-color: #fff;
      box-shadow: 0 0 0 2px rgba(24, 119, 242, 0.15);
    }

    textarea {
      resize: vertical;
      min-height: 70px;
    }

    button {
      width: 100%;
      padding: 14px;
      background-color: #1877f2;
      color: #fff;
      border: none;
      border-radius: 8px;
      font-weight: 700;
      font-size: 1rem;
      cursor: pointer;
    }

    #msg {
      text-align: center;
      font-weight: 600;
      margin-top: 12px;
      font-size: 0.95rem;
      color: #16a34a;
    }

    .autocomplete-list {
      position: absolute;
      background: #fff;
      border: 1px solid #ccc;
      border-radius: 6px;
      z-index: 99;
      max-height: 180px;
      overflow-y: auto;
      width: calc(100% - 2px);
      box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    }

    .autocomplete-item {
      padding: 10px;
      cursor: pointer;
    }

    .autocomplete-item:hover, .autocomplete-item.active {
      background: #1877f2;
      color: #fff;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>GOODS REQUEST</h2>

    <form id="myForm" onsubmit="handleSubmit(event)">
      <label for="name">Nama</label>
      <div style="position: relative;">
        <input type="text" id="name" placeholder="Ketik nama..." autocomplete="off" required>
        <div id="nameList" class="autocomplete-list" style="display:none;"></div>
      </div>

      <label for="item">Item</label>
      <div style="position: relative;">
        <input type="text" id="item" placeholder="Ketik item..." autocomplete="off" required>
        <div id="itemList" class="autocomplete-list" style="display:none;"></div>
      </div>

      <label for="out">Jumlah (Out)</label>
      <input type="number" id="out" min="1" placeholder="Masukkan jumlah" required>

      <label for="desc">Keterangan</label>
      <textarea id="desc" placeholder="Opsional..."></textarea>

      <button type="submit">Kirim</button>
      <div id="msg"></div>
    </form>
  </div>

  <script>
    let nameData = [];
  let itemData = [];
  let itemStock = {}; // simpan stok di sini (tidak ditampilkan ke user)

  // Ambil data dropdown + stok
  function loadDropdownData() {
    google.script.run.withSuccessHandler(data => {
      nameData = data.names || [];
      itemData = data.items || [];

      enableAutocomplete("name", nameData);
      enableAutocomplete("item", itemData);
    }).getDropdownData();
  }

  // Fungsi autocomplete untuk input teks
  function enableAutocomplete(inputId, dataList) {
    const input = document.getElementById(inputId);
    const listBox = document.getElementById(inputId + "List");

    input.addEventListener("input", () => {
      const val = input.value.toLowerCase();
      listBox.innerHTML = "";
      if (!val) {
        listBox.style.display = "none";
        return;
      }

      const filtered = dataList.filter(item => item.toLowerCase().includes(val));
      if (filtered.length === 0) {
        listBox.style.display = "none";
        return;
      }

      filtered.forEach(item => {
        const div = document.createElement("div");
        div.textContent = item;
        div.classList.add("autocomplete-item");
        div.onclick = () => {
          input.value = item;
          listBox.style.display = "none";
          if (inputId === "item") fetchStock(item);
        };
        listBox.appendChild(div);
      });

      listBox.style.display = "block";
    });

    document.addEventListener("click", (e) => {
      if (e.target !== input && !listBox.contains(e.target)) {
        listBox.style.display = "none";
      }
    });
  }

  // Ambil stok dari Apps Script (tanpa menampilkan)
  function fetchStock(itemName) {
    google.script.run.withSuccessHandler(stock => {
      itemStock[itemName] = stock;
    }).getStockForItem(itemName);
  }

  // Format tanggal singkat (dd Mmm yy)
  function formatDate(d) {
    const m = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
    const y = String(d.getFullYear()).slice(-2);
    return `${String(d.getDate()).padStart(2, "0")} ${m[d.getMonth()]} ${y}`;
  }

  // üîπ Ganti alert default dengan custom popup
  function showAlert(message) {
    const alertBox = document.createElement("div");
    alertBox.style.position = "fixed";
    alertBox.style.top = "50%";
    alertBox.style.left = "50%";
    alertBox.style.transform = "translate(-50%, -50%)";
    alertBox.style.background = "#222";
    alertBox.style.color = "#fff";
    alertBox.style.padding = "20px 30px";
    alertBox.style.borderRadius = "10px";
    alertBox.style.zIndex = "9999";
    alertBox.style.textAlign = "center";
    alertBox.style.boxShadow = "0 4px 12px rgba(0,0,0,0.2)";
    alertBox.innerHTML = `
      <p style="margin-bottom:12px;">${message}</p>
      <button style="
        background:#1877f2;
        color:#fff;
        border:none;
        border-radius:6px;
        padding:6px 14px;
        cursor:pointer;
      " onclick="this.parentElement.remove()">OK</button>
    `;
    document.body.appendChild(alertBox);
  }

  // Validasi otomatis jumlah "Out"
  document.getElementById("out").addEventListener("input", () => {
    const item = document.getElementById("item").value.trim();
    const val = parseInt(document.getElementById("out").value, 10);
    const stock = itemStock[item] || 0;

    if (val > stock && stock > 0) {
      showAlert("Jumlah 'Out' melebihi stok tersedia!");
      document.getElementById("out").value = "";
    }
  });

  // Kirim data ke Apps Script
  function handleSubmit(e) {
    e.preventDefault();

    const name = document.getElementById("name").value.trim();
    const item = document.getElementById("item").value.trim();
    const out = parseInt(document.getElementById("out").value, 10);
    const desc = document.getElementById("desc").value.trim();
    const msg = document.getElementById("msg");

    if (!nameData.includes(name)) {
      msg.style.color = "#dc2626";
      msg.textContent = "‚ö†Ô∏è Nama tidak valid!";
      return;
    }
    if (!itemData.includes(item)) {
      msg.style.color = "#dc2626";
      msg.textContent = "‚ö†Ô∏è Item tidak valid!";
      return;
    }

    msg.style.color = "#555";
    msg.textContent = "‚è≥ Mengirim data...";

    google.script.run.withSuccessHandler(res => {
      msg.style.color = res.startsWith("‚ùå") ? "#dc2626" : "#16a34a";
      msg.textContent = res;
      if (res.startsWith("‚úÖ")) document.getElementById("myForm").reset();
    }).submitForm({
      name, item, out, desc,
      date: formatDate(new Date())
    });
  }

  window.onload = loadDropdownData;
  </script>
</body>
</html>
